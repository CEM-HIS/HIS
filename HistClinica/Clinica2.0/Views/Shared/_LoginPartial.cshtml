@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNet.Identity
@inject SignInManager<USUARIO> SignInManager
@inject Microsoft.AspNetCore.Identity.UserManager<USUARIO> UserManager
@inject Clinica2._0.Repositories.EntityRepositories.Interfaces.IPersonaRepository PersonaRepository
@inject Clinica2._0.Repositories.EntityRepositories.Interfaces.IEmpleadoRepository EmpleadoRepository

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        USUARIO user = await UserManager.FindByIdAsync(User.Identity.GetUserId());
        Clinica2._0.DTO.PersonaDTO person = await EmpleadoRepository.GetById(user.idEmpleado);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bienvenido, @person.nombres @person.apellidoPaterno @person.apellidoMaterno</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Login" asp-action="Index">Login</a>
        </li>
    }
</ul>